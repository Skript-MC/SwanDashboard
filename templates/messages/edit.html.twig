{% extends 'layouts/panel.html.twig' %}

{% block title %}Édition{% endblock %}
{% block content %}
    <div class="container-fluid">
        {{ encore_entry_script_tags('editor') }}
        {{ encore_entry_link_tags('editor') }}
        <form action="{{ path('messages:postEdit') }}" id="form" method="POST">
            <div class="row">
                <div class="col-sm-6 mb-3">
                    <div class="card shadow position-relative">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">Éditeur</h6>
                        </div>
                        <div class="card-body">
                            <input type="hidden" value="{{ message.id }}" name="messageId">
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">Nom</span>
                                </div>
                                <input type="text" class="form-control" value="{{ message.name }}" aria-label="Nom" aria-describedby="name" id="name" name="name" onkeyup="generateDiff()">
                            </div>
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">Catégorie de message</span>
                                </div>
                                <select class="form-control" name="type" id="type" onchange="generateDiff()">
                                    <option value="auto" {{ message.messageType == 'auto' ? 'selected' }}>💬 Message rapide</option>
                                    <option value="error" {{ message.messageType == 'error' ? 'selected' }}>💬 Détail d'erreur</option>
                                    <option value="addonpack" {{ message.messageType == 'addonpack' ? 'selected' }}>💬 Pack d'add-ons</option>
                                    <option value="rule" {{ message.messageType == 'rule' ? 'selected' }}>💬 Règle</option>
                                    <option value="joke" {{ message.messageType == 'joke' ? 'selected' }}>💬 Blague</option>
                                </select>
                            </div>
                            <div class="dropdown-divider mb-3"></div>
                            <div> {# Don't remove this empty node #}
                                <div class="form-row" id="aliases">
                                    {% for alias in message.aliases %}
                                        <div class="form-group me-2">
                                            <div class="input-group my-2">
                                                <input type="text" class="form-control" name="aliases[{index}]" value="{{ alias }}" onkeyup="generateDiff()">
                                                <div class="input-group-append">
                                                    <button class="btn btn-outline-danger link-remove" type="button">
                                                        <i class="fas fa-times"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    {% endfor %}
                                </div>
                            </div>
                            <div class="mb-3">
                                <button type="button" id="addAliasButton" class="btn btn-sm btn-success text-white">
                                    <i class="fas fa-plus"></i> Ajouter un alias
                                </button>
                            </div>
                            <div class="dropdown-divider mb-3"></div>
                            <ul class="list-group list-group-flush">
                                <input id="easymde" name="content">
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="card shadow position-relative">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">Aperçu des modifications</h6>
                        </div>
                        <div class="card-body">
                            <div id="diff"></div>
                            {% if editForbidden %}
                                <div class="alert alert-info" role="alert">
                                    Une suggestion de modification est déjà en cours pour ce message.
                                    <br/>Vous ne pouvez pas le modifier tant qu'elle n'aura pas été traitée.
                                </div>
                            {% else %}
                                <button type="submit" class="btn btn-info m-1 text-white" id="send"><i class="fas fa-check"></i> Suggérer mes modifications</button>
                            {% endif %}
                            <div class="alert alert-info mt-3" id="alert">
                            </div>
                            {% for message in app.flashes('error') %}
                                <div class="alert alert-danger mt-3">
                                    {{ message }}
                                </div>
                            {% endfor %}
                        </div>
                    </div>
                    <div class="card shadow position-relative mt-3">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">Guide de contribution</h6>
                        </div>
                        <div class="card-body" id="guidelines">
                        </div>
                    </div>
                </div>
            </div>
            <script>
                const easyMDE = new window.easyMDE({
                    element: document.getElementById('easymde'),
                    initialValue: '{{ message.content|escape('js')|raw }}',
                    toolbar: ['bold', 'italic', 'quote', 'link', 'code', '|', 'preview', 'side-by-side', 'fullscreen', '|', 'guide']
                });
                const diff2html = window.diff2html;

                easyMDE.codemirror.on('change', () => generateDiff());

                document.getElementById('form').addEventListener('submit', () => {
                    document.getElementById('easymde').value = encodeURI(easyMDE.value().replace('\n', '\\n'));
                    let i = 0;
                    document.getElementById('aliases').querySelectorAll('.form-group').forEach((el) => {
                        el.querySelectorAll('input').forEach((input) => input.name = input.name.replace('{index}', i.toString()));
                        i++;
                    });
                });

                document.querySelectorAll('.link-remove').forEach((el) => el.addEventListener('click', () => {
                    const element = el.parentNode.parentNode;
                    element.parentNode.removeChild(element);
                    generateDiff();
                }));

                document.getElementById('addAliasButton').addEventListener('click', () => {
                    const input = '<div class="input-group my-2"> <input type="text" class="form-control" name="aliases[{index}]" onkeyup="generateDiff()" <div class="input-group-append"> <button class="btn btn-outline-danger link-remove" type="button"> <i class="fas fa-times"></i> </button> </div> </div>'
                    const newElement = document.createElement('div');

                    newElement.className = 'form-group me-2';
                    newElement.innerHTML = input;

                    document.getElementById('aliases').appendChild(newElement);

                    const linkRemove = newElement.querySelector('.link-remove');
                    linkRemove.addEventListener('click', () => {
                        const element = linkRemove.parentNode.parentNode;
                        element.parentNode.removeChild(element);
                        generateDiff();
                    });

                });

                function generateDiff() {
                    const name = document.getElementById('name').value || 'Sans nom';
                    const type = document.getElementById('type').value;
                    const aliases = getAliases();
                    const diff = window.diff.createTwoFilesPatch('{{ message.name|escape('js')|raw }}', name, 'Catégorie: {{ message.messageType }}\nAliases:\n{{ message.aliases|join('\n')|escape('js')|raw }}\n\n{{ message.content|escape('js')|raw }}', `Catégorie: ${type}\nAliases:\n${aliases.join('\n')}\n\n${easyMDE.value()}`);

                    fitWithType(type);
                    checkChanges(name === '{{ message.name }}'
                        && '{{ message.messageType }}' === type
                        && '{{ message.aliases|join|escape('js')|raw }}' === aliases.join('')
                        && '{{ message.content|escape('js')|raw }}' === easyMDE.value(),
                        easyMDE.value().length > 2000
                    );
                    alertMessage(easyMDE.value() === '', 'Attention : vous vous apprêtez à suggérer la suppression de ce message.')

                    const diffJson = diff2html.parse(diff);
                    document.getElementById('diff').innerHTML = diff2html.html(diffJson, {
                        drawFileList: false
                    });
                }

                function fitWithType(type) {
                    const guidelines = document.getElementById('guidelines');
                    switch (type) {
                        case 'addonpack':
                        case 'auto':
                        case 'error':
                        case 'rule':
                            guidelines.innerHTML = 'Vous souhaitez modifier un message ? Pas de problème ! Une fois que vous aurez suggéré votre modification, l\'équipe de modération devra l\'approuver avant qu\'il puisse être utilisé avec Swan. Cependant, voici quelques conventions à respecter afin que nos messages soient cohérents : <ul class="mt-3"> <li>✒️ <strong>Règles de français</strong> : veillez à ce que votre message ne comporte aucune faute de français (orthographe, conjugaison, grammaire, syntaxe...) et qu\'il soit correctement construit ;</li><li>🔎 <strong>Informations essentielles</strong> : essayez de faire ressortir les informations importantes de votre message, de manière à ce que les utilisateurs puissent trouver rapidement ce dont ils ont besoin ;</li><li>📰 <strong>Markdown</strong> : les messages Discord utilisant Markdown, vous devez utiliser cette mise en forme pour vos messages. L\'éditeur supporte ce formatage. Si vous avez besoin d\'aide, consultez ce <a href="https://support.discord.com/hc/fr/articles/210298617-Markdown-Text-101-Chat-Formatting-Bold-Italic-Underline-">tutoriel</a>.</li></ul>'
                            break;
                        case 'joke':
                            guidelines.innerHTML = 'Vous souhaitez modifier une blague ? Pas de problème ! Une fois que vous aurez suggéré votre modification, l\'équipe de modération devra l\'approuver avant qu\'elle puisse être utilisé avec Swan. Cependant, veillez à ce que votre blague reste adaptée à tout public. Pour terminer, merci d\'être drôle.'
                            break;
                        default:
                            break;
                    }
                }

                function checkChanges(isEmpty, isNotValid) {
                    const valid = !isEmpty && !isNotValid;
                    let msg;
                    if (isEmpty) msg = 'Effectuez vos modifications et suggérez vos changements.';
                    if (isNotValid) msg = 'Le contenu de votre message ne peut pas dépasser 2 000 caractères.';
                    alertMessage(!valid, msg);
                    toggleSubmitButton(valid);
                }

                function toggleSubmitButton(status) {
                    const element = document.getElementById('send');
                    if (!element) return;
                    if (!status)
                        element.setAttribute('disabled', 'true');
                    else
                        element.removeAttribute('disabled');
                }

                function alertMessage(status, message) {
                    const alert = document.getElementById('alert');
                    alert.style.display = (status ? 'block' : 'none');
                    if (message) alert.innerText = message;
                }

                function getAliases() {
                    const aliases = [];
                    document.getElementById('aliases').querySelectorAll('.form-group').forEach((el) => el.querySelectorAll('input').forEach((input) => aliases.push(input.value)));
                    return aliases;
                }

                generateDiff();

            </script>
        </form>
    </div>
{% endblock %}
